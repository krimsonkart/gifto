version: 2
jobs:
  build:
    working_directory: ~/krimsonkart/gifto
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: progressly/circleci_node-aws:latest
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        - v2-dep-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - v2-dep-master-
        - v2-dep-
    - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
    - run: export PATH="~/BeProductiv/usage-data-service/node_modules/.bin:$PATH"
    - run: npm install
    - save_cache:
        key: v2-dep-{{ .Branch }}-{{ checksum "package-lock.json" }}
        paths:
        - ./node_modules
    - run: npm test
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
  prod-lambda-deploy:
    working_directory: ~/krimsonkart/gifto
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: progressly/circleci_node-aws:latest
      command: /sbin/init
    steps:
    - checkout
    - run:
        name: Installing deployment dependencies
        command: |
          sudo pip install aws-sam-cli --upgrade
          sudo pip install awsebcli --upgrade
    - run:
        name: Deploying lambda
        command: |
          aws -h
          eb -h
          sam -h

workflows:
  version: 2
  build_deploy:
    jobs:
      - prod-lambda-deploy

