version: 2
jobs:
  build:
    working_directory: ~/krimsonkart/gifto
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/node:8.11.3-jessie-browsers
      command: /sbin/init
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        - v2-dep-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - v2-dep-master-
        - v2-dep-
    - run: if [ -z "${NODE_ENV:-}" ]; then export NODE_ENV=test; fi
    - run: export PATH="~/BeProductiv/usage-data-service/node_modules/.bin:$PATH"
    - run: npm install
    - save_cache:
        key: v2-dep-{{ .Branch }}-{{ checksum "package-lock.json" }}
        paths:
        - ./node_modules
    - run: npm test
    - store_test_results:
        path: /tmp/circleci-test-results
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results
  deploy:
    working_directory: ~/BeProductiv/usage-data-service
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: circleci/node:8.11.3-jessie-browsers
      command: /sbin/init
    steps:
    - checkout
    - run:
        name: Installing deployment dependencies
        command: |
          sudo apt-get install python-pip libpython-dev
          sudo pip install urllib3==1.22
          sudo pip install awsebcli --upgrade
    - run:
        name: Deploying Scheduler
        command: eb deploy UsageDataService-scheduler --timeout 20
#    - run:
#        name: Deploying lambda
#        command: cd lambda && sh packager.sh
#    - run:
#        name: Deploying Service
#        command: eb deploy UsageDataService-dev --timeout 20
  prod-service-deploy:
    working_directory: ~/BeProductiv/usage-data-service
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: circleci/node:8.11.3-jessie-browsers
      command: /sbin/init
    steps:
    - checkout
    - run:
        name: Installing deployment dependencies
        command: |
          sudo apt-get install python-pip libpython-dev
          sudo pip install urllib3==1.22
          sudo pip install awsebcli --upgrade
    - run:
        name: Deploying Service
        command: eb deploy UsageDataService-dev --timeout 20
  prod-scheduler-deploy:
    working_directory: ~/BeProductiv/usage-data-service
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: circleci/node:8.11.3-jessie-browsers
      command: /sbin/init
    steps:
    - checkout
    - run:
        name: Installing deployment dependencies
        command: |
          sudo apt-get install python-pip libpython-dev
          sudo pip install urllib3==1.22
          sudo pip install awsebcli --upgrade
    - run:
        name: Deploying Scheduler
        command: eb deploy UsageDataService-scheduler --timeout 20
  prod-lambda-deploy:
    working_directory: ~/BeProductiv/usage-data-service
    parallelism: 1
    shell: /bin/bash --login
    docker:
    - image: circleci/node:10.10.0-jessie-browsers
      command: /sbin/init
    steps:
    - checkout
    - run:
        name: Installing deployment dependencies
        command: |
          cat /etc/os-release
          sudo apt-get install python-setuptools
          sudo apt-get install libpython-dev rsync grsync
          sudo easy_install -U pip
          sudo pip install urllib3==1.22
          sudo pip install aws --upgrade
          sudo pip install aws-sam-cli --upgrade
          sudo pip install awsebcli --upgrade
    - run:
        name: Deploying lambda
        command: cd lambda && sh packager.sh

workflows:
  version: 2
  build_deploy:
    jobs:
#      - deploy
#      - request-prod-service-deploy:
#          type: approval
#          requires:
#            - deploy
#      - request-prod-lambda-deploy:
#          type: approval
#      - prod-service-deploy:
#          requires:
#            - request-prod-service-deploy
      - prod-lambda-deploy
#          requires:
#            - request-prod-lambda-deploy

